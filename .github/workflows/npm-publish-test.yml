name: Pre-release to test package

on:
  push:
    branches:
      - dev
      - action_tests

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  # ╔══════════════════════════════════════════════════════════╗
  # ║                      Get Timestamp                       ║
  # ╚══════════════════════════════════════════════════════════╝
  Timestamp:
    runs-on: ubuntu-latest
    outputs:
      ts: ${{ steps.get.outputs.ts }}
    steps:
      - id: get
        run: |
          echo "ts=$(date -u +'%Y%m%d-%H%M%S')" >> "$GITHUB_OUTPUT"


  # ╔══════════════════════════════════════════════════════════╗
  # ║                   Audit dependencies                     ║
  # ╚══════════════════════════════════════════════════════════╝
  audit:
    needs: [Timestamp]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Restore npm cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            **/node_modules
            package-lock.json
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm i

      - name: Run npm audit
        run: npm audit --json > audit-report.json

      - name: Upload audit report
        uses: actions/upload-artifact@v4
        with:
          name: Auria-audit-${{ needs.Timestamp.outputs.ts }}.json
          path: audit-report.json
          retention-days: 10


  # ╔══════════════════════════════════════════════════════════╗
  # ║                    Dependencies scan                     ║
  # ╚══════════════════════════════════════════════════════════╝
  depscan:
    needs: [Timestamp]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Restore npm cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            **/node_modules
            package-lock.json
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - uses: actions/setup-node@v4
        with:
          node-version: '18'

      - run: npm i

      - name: Run npm audit via Action
        uses: oke-py/npm-audit-action@v2
        with:
          severity: moderate      # low, moderate, high, critical
          registry-url: 'https://registry.npmjs.org'


  # ╔══════════════════════════════════════════════════════════╗
  # ║                        Linting                           ║
  # ╚══════════════════════════════════════════════════════════╝
  lint:
    runs-on: ubuntu-latest
    needs: [Timestamp]
    steps:
      - uses: actions/checkout@v4

      - name: Restore npm cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            **/node_modules
            package-lock.json
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      
      - uses: actions/setup-node@v4
        with: { node-version: '18' }
      - run: npm i

      - run: npm run typecheck
      - run: npm run lint


  # ╔══════════════════════════════════════════════════════════╗
  # ║                        Testing                           ║
  # ╚══════════════════════════════════════════════════════════╝
  test:
    runs-on: ubuntu-latest
    needs: [audit, lint]
    steps:
      - uses: actions/checkout@v4

      - name: Restore npm cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            **/node_modules
            package-lock.json
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with: 
          node-version: '18'

      - run: npm i
      - run: npm run test

      - name: Coverage report
        run: npm run coverage   # make sure this outputs an lcov report at coverage/lcov.info

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: coverage/lcov.info
          flags: unittests
          fail_ci_if_error: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}


  # ╔══════════════════════════════════════════════════════════╗
  # ║                    Build the package                     ║
  # ╚══════════════════════════════════════════════════════════╝
  build:
    needs: [Timestamp, audit, depscan]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Restore npm cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            **/node_modules
            package-lock.json
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: Auria-dist-${{ needs.Timestamp.outputs.ts }}
          path: dist/
          retention-days: 20

  # ╔══════════════════════════════════════════════════════════╗
  # ║                     Publish to npm                       ║
  # ╚══════════════════════════════════════════════════════════╝
  Publish:
    needs: [Timestamp, build, test]
    runs-on: ubuntu-latest

    permissions:
      contents: write 

    steps:
      - name: Checkout code (for package.json, etc.)
        uses: actions/checkout@v4
        with:
          persist-credentials: true 

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: Auria-dist-${{ needs.Timestamp.outputs.ts }}
          path: dist/

      - name: Restore npm cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            **/node_modules
            package-lock.json
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Setup Node.js & Authenticate
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Change to test package in package.json
        run: |
          npm pkg set name="@auria-system/auria-test"

      - name: Bump version
        run: |
          npm version prerelease --no-git-tag-version

          NEW_VER=$(node -p "require('./package.json').version")
          echo "Stepped up to $NEW_VER"

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json
          git commit -m "chore: Bump version to $NEW_VER"
          git push

      - name: Install dependencies
        run: npm install

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm publish --access public
