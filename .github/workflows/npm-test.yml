name: Release & Commit Version

on:
  push:
    # triggers on tag pushes like "v1.2.3" and also on pushes to action_tests
    tags:
      - 'v*.*.*'
    branches:
      - action_tests

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write   # so the publish job can push back if needed

jobs:

  # ╔══════════════════════════════════════════════════════════╗
  # ║                      Get Timestamp                       ║
  # ╚══════════════════════════════════════════════════════════╝
  Timestamp:
    runs-on: ubuntu-latest
    outputs:
      ts: ${{ steps.get.outputs.ts }}
    steps:
      - id: get
        run: |
          echo "ts=$(date -u +'%Y%m%d-%H%M%S')" >> "$GITHUB_OUTPUT"


  # ╔══════════════════════════════════════════════════════════╗
  # ║                        Linting                           ║
  # ╚══════════════════════════════════════════════════════════╝
  lint:
    runs-on: ubuntu-latest
    needs: [Timestamp]
    steps:
      - uses: actions/checkout@v4

      - name: Restore npm cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            **/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      
      - uses: actions/setup-node@v4
        with: { node-version: '18' }
      - run: npm i
      - run: npm run lint       # e.g. ESLint
      - run: npm run typecheck  # e.g. tsc --noEmit


  test:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - uses: actions/checkout@v4

      - name: Restore npm cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            **/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      
      - uses: actions/setup-node@v4
        with: { node-version: '18' }
      - run: npm i
      - run: npm run test
      - run: npm run coverage


  # ╔══════════════════════════════════════════════════════════╗
  # ║                   Audit dependencies                     ║
  # ╚══════════════════════════════════════════════════════════╝
  audit:
    needs: [Timestamp]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Restore npm cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            **/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm i

      - name: Run npm audit
        run: npm audit --json > audit-report.json

      - name: Upload audit report
        uses: actions/upload-artifact@v4
        with:
          name: npm-audit-report
          path: Auria-audit-${{ needs.Timestamp.outputs.ts }}.json
          retention-days: 10


  # ╔══════════════════════════════════════════════════════════╗
  # ║                    Dependencies scan                     ║
  # ╚══════════════════════════════════════════════════════════╝
  depscan:
    needs: [Timestamp]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: 🔍 Run npm audit via Action
        uses: crazy-max/npm-audit-action@v2
        with:
          severity: moderate      # low, moderate, high, critical
          registry-url: 'https://registry.npmjs.org'

  # ╔══════════════════════════════════════════════════════════╗
  # ║                    Build the package                     ║
  # ╚══════════════════════════════════════════════════════════╝
  build:
    needs: [Timestamp]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Restore npm cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            **/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: Auria-dist-${{ needs.Timestamp.outputs.ts }}
          path: dist/
          retention-days: 20

  # ╔══════════════════════════════════════════════════════════╗
  # ║                     Publish to npm                       ║
  # ╚══════════════════════════════════════════════════════════╝
  publish:
    needs: [Timestamp, build]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code (for package.json, etc.)
        uses: actions/checkout@v4
        with:
          persist-credentials: true 

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: Auria-dist-${{ needs.Timestamp.outputs.ts }}
          path: dist/

      - name: Restore npm cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            **/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Setup Node.js & Authenticate
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm install

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm publish --access public
